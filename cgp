#!/bin/bash

rm -f changeport.py
cat > changeport.py <<EOF
import sqlite3
import json
import re

def modify_port():
    conn = sqlite3.connect('/etc/x-ui/x-ui.db')
    cursor = conn.cursor()

    ip_to_modify = input("请输入要修改的IP地址: ").strip()
    original_port = input("请输入原先的端口: ").strip()
    new_port = input("请输入要修改至的端口: ").strip()

    if not re.match(r'\d+', original_port) or not re.match(r'\d+', new_port):
        print("端口格式错误，请输入数字")
        return

    # 修改 inbounds 表中的 tag 和 port
    cursor.execute("SELECT id, settings, tag FROM inbounds WHERE listen=? AND port=?", (ip_to_modify, original_port))
    rows = cursor.fetchall()

    if not rows:
        print(f"没有找到匹配的IP和端口: {ip_to_modify}:{original_port}")
        return

    for row in rows:
        inbound_id, settings_json, tag = row

        # 更新 tag
        new_tag = tag.replace(f":{original_port}", f":{new_port}")

        # 更新 settings JSON 中的 port 信息
        settings = json.loads(settings_json)
        settings['port'] = int(new_port)

        cursor.execute("UPDATE inbounds SET tag=?, port=?, settings=? WHERE id=?", (new_tag, new_port, json.dumps(settings), inbound_id))

    # 修改 settings 表中的 xrayTemplateConfig 字段的 JSON 内容
    cursor.execute("SELECT id, value FROM settings WHERE key='xrayTemplateConfig'")
    settings_row = cursor.fetchone()

    if settings_row:
        settings_id, xray_template_config_json = settings_row
        with open('change.json', 'w') as change_file:
            change_file.write(xray_template_config_json)

        with open('change.json', 'r+') as change_file:
            xray_template_config = json.load(change_file)

            # 修改 xrayTemplateConfig 中的 inboundTag
            updated = False
            for rule in xray_template_config.get('routing', {}).get('rules', []):
                if 'inboundTag' in rule and isinstance(rule['inboundTag'], list):
                    for i, tag in enumerate(rule['inboundTag']):
                        if tag == f"inbound-ip:{ip_to_modify}:{original_port}" or tag == f"inbound-{ip_to_modify}:{original_port}":
                            rule['inboundTag'][i] = tag.replace(f":{original_port}", f":{new_port}")
                            updated = True

            if updated:
                change_file.seek(0)
                json.dump(xray_template_config, change_file, indent=2, ensure_ascii=False)
                change_file.truncate()

                with open('change.json', 'r') as change_file:
                    json_content = change_file.read()

                cursor.execute("UPDATE settings SET value=? WHERE id=42 AND key='xrayTemplateConfig'", (json_content,))

    conn.commit()
    conn.close()

    print(f"成功将 IP {ip_to_modify} 的端口从 {original_port} 修改为 {new_port}")

if __name__ == "__main__":
    modify_port()
EOF

x-ui stop
if [ $? -ne 0 ]; then
    echo "未能停止x-ui或者权限不足"
fi
python3 changeport.py
if [ $? -ne 0 ]; then
    echo "脚本执行失败"
    rm -f changeport.py
    exit 1
fi

rm -f changeport.py
x-ui start

sleep 3
