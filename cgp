#!/bin/bash

rm -f changeport.py
cat > changeport.py <<EOF
import json
import sqlite3
import os

db_path = '/etc/x-ui/x-ui.db'
if not os.path.exists(db_path):
    print("未找到数据库，请先执行安装.")
    exit()

conn = sqlite3.connect(db_path)
cursor = conn.cursor()

def update_inbounds(ip):
    cursor.execute("SELECT id, listen, port FROM inbounds WHERE listen=?", (ip,))
    inbounds = cursor.fetchall()

    if not inbounds:
        print("未找到关于这个ip的配置")
        return None

    new_ports = {}  # 存储新的端口信息
    for inbound in inbounds:
        inbound_id, listen, port = inbound
        old_port = port
        new_port = input(f"请输入 {ip}:{port} 的新端口：（无需修改请直接回车） ").strip()
        if new_port:
            new_port = int(new_port)
            cursor.execute("UPDATE inbounds SET port=? WHERE id=?", (new_port, inbound_id))
            conn.commit()
            print(f"{ip} 端口 {port} 已经更改为 {new_port}")
            new_ports[old_port] = new_port  # 保存新端口
        else:
            new_ports[old_port] = old_port  # 保存旧端口

    return new_ports

def update_xray_template_config(ip, new_ports):
    cursor.execute("SELECT value FROM settings WHERE key='xrayTemplateConfig' AND id=42")
    config_row = cursor.fetchone()
    if not config_row:
        print("找不到配置模板，请重新安装面板")
        return

    # 使用临时文件操作
    with open('change.json', 'w') as f:
        f.write(config_row[0])

    with open('change.json', 'r') as f:
        config = json.load(f)
    rules = config["routing"]["rules"]

    # 更新 route 中的 tag
    for old_port, new_port in new_ports.items():
        for rule in rules:
            for index, tag in enumerate(rule.get("inboundTag", [])):
                if tag == f"inbound-ip:{ip}:{old_port}":
                    print(f"正在将 {tag} 替换为 inbound-ip:{ip}:{new_port}")
                    rule["inboundTag"][index] = f"inbound-ip:{ip}:{new_port}"
                    break

    with open('change.json', 'w') as f:
        json.dump(config, f, indent=4)

    cursor.execute("UPDATE settings SET value=? WHERE id=42 AND key='xrayTemplateConfig'", (open('change.json', 'r').read(),))
    conn.commit()

    os.remove('change.json')
    print("xrayTemplateConfig 修改成功.")

ip = input("请输入要修改端口的IP地址（仅支持ipv4地址）： ")
new_ports = update_inbounds(ip)
if new_ports:
    update_xray_template_config(ip, new_ports)

conn.close()

EOF

x-ui stop
if [ $? -ne 0 ]; then
    echo "未能停止x-ui或者权限不足"
fi
python3 changeport.py
if [ $? -ne 0 ]; then
    echo "脚本执行失败"
    rm -f changeport.py
    exit 1
fi

rm -f changeport.py
x-ui start